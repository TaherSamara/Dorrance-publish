@model dorranceCP.Models.authers
@{
    ViewBag.Title = "Add Authers";

}
@section css{
    <style>
        .page-header-fixed .page-container {
            margin-top: 50px !important;
        }
    </style>
}

<div class="page-bar">
    <ul class="page-breadcrumb">
        <li>
            <i class="fa fa-home"></i>
            <a href="/CP/Home/">Home</a>
            <i class="fa fa-angle-right"></i>
        </li>
       
        <li>
            <a href="#">@ViewBag.Title</a>
            <i class="fa fa-angle-right"></i>
        </li>

    </ul>

</div>

@using (Html.BeginForm(null, null, FormMethod.Post,
                            new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-md-12">
                <div class="tabbable-line">
                    <div class="tab-content">                  
                            <div class="tab-pane active">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.name, "Auther Name", htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.name, new { htmlAttributes = new { required = "required", title = " Required Field", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.email, "Auther Email", htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.email, new { htmlAttributes = new {type="email", required = "required", title = " Required Field", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.password, "Auther Password", htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.password, new { htmlAttributes = new { type = "password", required = "required", title = " Required Field", @class = "form-control" } })
                                        
                                        @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.address, "Auther Address", htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.address, new { htmlAttributes = new { required = "required", title = " Required Field", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.phone, "Auther Phone", htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.phone, new { htmlAttributes = new { type="number", required = "required", title = " Required Field", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.country_id, "Auther Country", htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.country_id, (SelectList)ViewBag.CountryList, "Country", htmlAttributes: new { @class = "form-control col-lg-2 select2me", @id = "cuntlist1", style = "margin-bottom:5%;" })
                                        @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                
                                <div class="form-group">
                                    @Html.LabelFor(model => model.image, "Photo", htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-8">
                                        <input type="file" name="img" />
                                        @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-8">
                                <input type="submit" value="add" class="btn btn-primary" />
                                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-defult" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
