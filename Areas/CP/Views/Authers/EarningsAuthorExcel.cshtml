
@{ ViewBag.Title = " Author Earnings";
    //var adm = ViewBag.adm as IEnumerable<dorranceCP.Models.Orders>;
    dorranceCP.Models.NS_DorranceEntities db = new dorranceCP.Models.NS_DorranceEntities();
    int id = ViewBag.uid;
    var adm = db.Orders.Where(x1 => x1.is_delete == false && x1.auther_id == id).ToList();

    //var suh = db.authers.Where(y => y.id == id).FirstOrDefault();
    //Layout = null;
    /////// !important  : this view to Get Order of Last Period  /////// }


<style>
    tr, th {
        text-align: left !important;
    }

    .m-checkbox {
        display: none;
    }

    .dataTables_wrapper {
        line-height: .9 !important;
        margin-top: -10% !important;
    }
</style>
        <div style="text-align:right;margin-top: 9%; margin-left: 2%;" class="col-md-9">


            @{ DateTime dt = DateTime.UtcNow;
                double total_current = 0;
                double total_last = 0;
                var bookdet2 = db.book.Where(w => w.auther_id == id && w.is_delete == false).ToList();
                var usr = db.authers.Where(d => d.id == id).FirstOrDefault();
                foreach (var c in bookdet2)
                {
                        <div class="table-responsive">
                <h4 style='float: left;text-align: left;font-weight:bold !important;font-size: 25px !important;width: 100% !important;'>Earnings Details </h4>

                <table class="table table-hover table-responsive">
                    @{ //var books1 = db.Orders.Where(x => x.auther_id == id && x.sku == s && x.is_delete == false).ToList();
                        //if (books1 != null)
                        //{
                        //    foreach (var c in books1)
                        //    {
                        //        var bk = db.book.Where(d => d.isbn13 == c.sku).FirstOrDefault();
                        //var im = bk != null ? (String.IsNullOrEmpty(bk.image) ? "" : url + bk.image) : "";
                        //calculate earning

                        //List<earn> e = new List<earn>();
                        int y = dt.Year;
                        int y2 = dt.Year;
                        var all_order = db.Orders.Where(x2 => x2.is_delete == false && x2.auther_id == id).ToList();
                        var orders = new List<dorranceCP.Models.Orders>();
                        if ((dt.Month > 10 && dt.Month <= 12) || dt.Month < 5)
                        {
                            if ((dt.Month > 10 && dt.Month <= 12))
                            {
                                y = dt.Year;
                                orders = all_order.Where(x2 => (x2.order_date.Value.Month > 4 && x2.order_date.Value.Month < 11) && (x2.order_date.Value.Year == y)).OrderByDescending(x2 => x2.id).ToList();
                            }
                            if (dt.Month < 5)
                            {
                                y = dt.Year - 1;
                                orders = all_order.Where(x2 => (x2.order_date.Value.Month > 4 && x2.order_date.Value.Month < 11) && (x2.order_date.Value.Year == y)).OrderByDescending(x2 => x2.id).ToList();

                            }
                        }
                        else
                        {
                            if ((dt.Month > 4 && dt.Month < 11))
                            {
                                y = dt.Year;
                                y2 = dt.Year - 1;
                                orders = all_order.Where(x3 => ((x3.order_date.Value.Month < 5 && x3.order_date.Value.Month > 0 && (x3.order_date.Value.Year == y)) || (x3.order_date.Value.Month > 10 && x3.order_date.Value.Month <= 12 && (x3.order_date.Value.Year == y2)))).OrderByDescending(x2 => x2.id).ToList();
                            }

                        }



                        //int y = dt.Year;
                        //int y2 = dt.Year;
                        //var Lorders = db.Orders.Where(x2 => x2.is_delete == false && x2.auther_id == id).ToList();
                        //if ((dt.Month > 10 && dt.Month == 12) || dt.Month < 5)
                        //{
                        //    y = dt.Year;
                        //    y2 = dt.Year - 1;
                        //    Lorders = db.Orders.Where(x3 => x3.is_delete == false && x3.auther_id == id && ((x3.order_date.Value.Month < 5 && x3.order_date.Value.Month > 0 && (x3.order_date.Value.Year == y)) || (x3.order_date.Value.Month > 10 && x3.order_date.Value.Month <= 12 && (x3.order_date.Value.Year == y2)))).OrderByDescending(x2 => x2.id).ToList();

                        //    //if ((dt.Month > 10 && dt.Month == 12))
                        //    //{
                        //    //    y = dt.Year;
                        //    //    Lorders = db.Orders.Where(x2 => x2.is_delete == false && x2.auther_id == id && (x2.order_date.Value.Month > 4 && x2.order_date.Value.Month < 11) && (x2.order_date.Value.Year == y)).OrderByDescending(x2 => x2.id).ToList();
                        //    //}
                        //    //if (dt.Month < 5)
                        //    //{
                        //    //    y = dt.Year - 1;
                        //    //    Lorders = db.Orders.Where(x2 => x2.is_delete == false && x2.auther_id == id && (x2.order_date.Value.Month > 4 && x2.order_date.Value.Month < 11) && (x2.order_date.Value.Year == y)).OrderByDescending(x2 => x2.id).ToList();

                        //    //}
                        //}
                        //else
                        //{
                        //    y = dt.Year;
                        //    Lorders = db.Orders.Where(x2 => x2.is_delete == false && x2.auther_id == id && (x2.order_date.Value.Month > 4 && x2.order_date.Value.Month < 11) && (x2.order_date.Value.Year == y)).OrderByDescending(x2 => x2.id).ToList();

                        //}

                        //var last_orders = db.Orders.Where(x => x.is_delete == false && x.auther_id == id && x.sku == c.isbn13 && ((x.order_date.Value.Month < 5 && x.order_date.Value.Month > 0) || (x.order_date.Value.Month > 10 && x.order_date.Value.Month <= 12))).OrderByDescending(x => x.id).ToList();

                        //if ((dt.Month < 5 && dt.Month > 0) || (dt.Month > 10 && dt.Month <= 12))
                        //{
                        //    total_current1 = total_last;
                        //    total_last1 = total_current;
                        //    date1 = "11/1/" + dt.Year + " to " + "4/30/" + dt.Year;

                        //}
                        //else
                        //{
                        //    total_current1 = total_current;
                        //    total_last1 = total_last;
                        //    date1 = "5/1/" + dt.Year + " to " + "10/31/" + dt.Year; }
                    }
                    <thead>




                        <tr style="background: #e6e6e6;">
                            <th>Date</th>
                            <th style="width: 10%;">Order No.</th>


                            <th>SKU</th>
                            <th>Book Title </th>
                            <th>Sales Type</th>
                            <th>Qty</th>
                            <th>Sales</th>
                            <th>Rate</th>
                            <th>Earnings</th>
                        </tr>
                    </thead>
                    <tbody>
                        @*<tr style="background: #d0d0d0 !important;">
                                <td style="font-weight: bold;text-align:left;font-size: 13px !important;background: #d0d0d0 !important;color: #121111;">Un Paid Period</td>
                            </tr>*@
                        @{ double unpaid = 0;
                            double old = 0;
                            int y3 = dt.Year;
                            int y4 = dt.Year;


                            var bookss = db.book.Where(e => e.auther_id == id && e.is_delete == false).ToList();
                            if (bookss.Count() > 0)
                            {
                                foreach (var b in bookss)
                                {
                                    var pp = db.BookTotalForPeriod.Where(w => w.is_reset == false && w.sku == b.isbn13).ToList();
                                    //var pp = db.BookTotalForPeriod.Where(w=>w.is_reset == false && w.sku == b.isbn13 && w.from_date.Value.Month )

                                    if ((dt.Month > 10 && dt.Month <= 12) || dt.Month < 5)
                                    {

                                        if ((dt.Month > 10 && dt.Month <= 12))
                                        {
                                            y3 = dt.Year;
                                            var d = new DateTime(y3, 04, 30).Date;
                                            pp = db.BookTotalForPeriod.Where(w => w.is_reset == false && w.sku == b.isbn13 && w.to_date <= d).ToList();
                                        }
                                        if (dt.Month < 5)
                                        {

                                            y3 = dt.Year - 1;
                                            var d = new DateTime(y3, 04, 30).Date;
                                            pp = db.BookTotalForPeriod.Where(w => w.is_reset == false && w.sku == b.isbn13 && w.to_date <= d).ToList();

                                        }
                                    }
                                    else
                                    {
                                        if ((dt.Month > 4 && dt.Month < 11))
                                        {
                                            y = dt.Year;
                                            y2 = dt.Year - 1;
                                            var d = new DateTime(y2, 04, 30).Date;
                                            pp = db.BookTotalForPeriod.Where(w => w.is_reset == false && w.sku == b.isbn13 && w.to_date <= d).ToList();
                                        }

                                    }

                                    if (pp.Count() > 0)
                                    {
                                        foreach (var m in pp)
                                        {
                                            unpaid = unpaid + Convert.ToDouble(m.total_earnings);
                                        }
                                    }

                                    old = old + ((b.unpaid_earnings_amount != null) ? Convert.ToDouble(b.unpaid_earnings_amount) : 0);


                                }
                            } }




                        @{ double p = 0; }
                        @foreach (var item in orders)
                        {

                            var req = db.book.Where(w => w.isbn13 == item.sku && w.auther_id == id && w.is_delete == false).FirstOrDefault();

                            //var ord = db.Orders.Where(sk => sk.sku == n.sku).FirstOrDefault();

                            var earn_order = item.local_sort_text1;
                            var earn_book = req.earnings_scheme;
                            var sc = db.scheme_1.Where(s1 => s1.text.Contains(earn_order)).FirstOrDefault();
                            var sc_id = 0;
                            if (sc != null)
                            {
                                sc_id = sc.id;
                            }
                            var sc3 = db.scheme_2.Where(s2 => s2.text.Contains(earn_book)).FirstOrDefault();
                            var sc3_id = 0;
                            if (sc3 != null)
                            {
                                sc3_id = sc3.id;
                            }
                            var sc3_list = db.scheme_2.ToList();
                            //var order_period = c.order_date.Value.Month;
                            //var current_period = dt.Month;


                            double ern = 0;

                            //foreach (var f in sc3_list)
                            //{
                            var earning_ratio = db.Earnings.Where(er => er.id_scheme_1 == sc_id && er.id_scheme_2 == sc3_id && er.sku == item.sku).FirstOrDefault();
                            double v = 0;
                            if (earning_ratio != null)
                            {
                                v = Convert.ToDouble((earning_ratio.value / 100) * item.total_price);
                                ern = ern + Convert.ToDouble(earning_ratio.value);

                            }
                            p = p + v;
                            //}


            <tr>
                <td hidden></td>
                <td style="font-size: 14px !important;">@item.order_date.Value.ToString("MM/dd/yyyy")</td>
                <td style="font-size: 14px !important;width:10%;">@item.order_number</td>
                <td style="font-size: 14px !important;">@item.sku</td>
                <td style="font-size: 14px !important;">@req.title</td>
                <td style="font-size: 14px !important;">@item.local_sort_text1</td>
                <td style="font-size :14px !important;">@item.quantity_ordered</td>
                <td style="font-size: 14px !important;">$@item.total_price.Value.ToString("0.00")</td>
                <td style="font-size: 14px !important;">@ern % Sales</td>
                <td style="font-size: 14px !important;">$@v.ToString("0.00")</td>
            </tr>}

                        @{ unpaid = (unpaid + old);
                            if (unpaid < 0)
                            {
                                unpaid = 0;
                            } }

                        @*<tr hidden>
                                <td colspan="7" hidden style="text-align:left;font-size: 13px !important;background: #d0d0d0 !important;color:#fff;">Summary</td>
                            </tr>*@

                        @*<tr style="background: #d0d0d0 !important;">
                                <td style="font-weight: bold;text-align:left;font-size: 13px !important;background: #d0d0d0 !important;color: #121111;">Summary</td>
                            </tr>*@
                        <tr>
                            <td colspan="1" style="font-weight: bold;font-size: 14px !important;"> Current Period</td>
                            <td colspan="8" style="color: #000;font-size: 14px !important;text-align: right;">$@p.ToString("0.00")</td>
                        </tr>

                        <tr>
                            <td colspan="1" style="font-weight: bold;font-size: 14px !important;">All Unpaid Total</td>
                            <td colspan="8" style="color: #000;font-size: 14px !important;text-align: right;">$@unpaid.ToString("0.00")</td>
                        </tr>

                        <tr>
                            <td colspan="1" style="font-weight: bold;font-size: 14px !important;">Grand Total</td>
                            <td colspan="8" style="color: #000;font-size: 14px !important;text-align: right;">$@((p + unpaid).ToString("0.00"))</td>
                        </tr>
                    </tbody>

                </table>

            </div> 
                }
            }
        </div> 
    }