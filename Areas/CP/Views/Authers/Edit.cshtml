@model dorranceCP.Models.authers


@{
    ViewBag.Title = "Edit Author";
    string url2 = "http://cp.dorrancepublishing.com/Content/Images/Original/";
}

<style>
     input {
            height: 38px !important;
        }
      .btn-primary{
         color: #fff !important;
     }
     .btn-defult{
         background: #ccc !important;
     }
    .selectric-wrapper {
        width: 66% !important;
        float: right !important;
    }
</style>

<div class="pageHeader col-md-9" style="width:100%;margin-top: 9%;">
    <h4 style="font-size:17px;"><a href="/CP/Home/dashboard">Home</a> / <a href="/CP/Authers/">Authors</a> / Edit Author</h4>

    <div class="row" style="margin-left: 1%;margin-top: 3%;">
        <div class="pageHeader" style="width:100%;box-shadow: 1px 3px 4px 3px #dedede;padding: 3%;" >
            <div style="float:right !important;">
                <a href="/CP/Authers/billing/@Model.id" style="font-weight:bold !important;">Billing Address &nbsp;&nbsp; </a>
                @*<a href="/CP/Authers/shipping/@Model.id" style="font-weight:bold !important;">Shipping Address</a>*@
            </div>
             <p style="font-size:20px;font-weight: 500;">Edit Author</p>
            <hr />
             <br />
           
    @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.id)
        @Html.Hidden("oldEmail", Model.email)
        @Html.Hidden("AspNetUserId", Model.AspNetUserId)

        <div class="addBookForm">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="addBookLeft" style="width: 60% !important;">
                @*<div class="tabbable-line">

                    <div class="tab-content">

                        <div class="tab-pane active">*@

                <div class="form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.name, "Name", htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control col-md-8 float-right", required = "required" } })
                        @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*@{
                    string cont = "";
                    var contract = db.ContractNumbersAuthors.Where(r => r.author_id == Model.id).FirstOrDefault();
                    if (contract != null)
                    {
                        cont = contract.contract_number;
                    }
                    else
                    {
                        cont = Model.contract_numb;
                    }
                }*@
                @*<div class="form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.contract_numb, "Contract Number", htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.contract_numb, new { htmlAttributes = new { @class = "form-control col-md-8 float-right", required = "required" } })
                        @Html.ValidationMessageFor(model => model.contract_numb, "", new { @class = "text-danger" })
                    </div>
                </div>*@


                @*<div class="form-group">
                        @Html.LabelFor(model => model.email, "Email", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", required = "required", type = "email", title = "Invalid Email Address" } })
                            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, "New Password", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

               
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.phone, "Phone", htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control col-md-8 float-right", pattern = "[0-9]{10,13}", title = "Mobile Number contains 13 number at most " } })
                        @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.address, "Address", htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control col-md-8 float-right" } })
                        @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.address2, "Address 2", htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.address2, new { htmlAttributes = new { @class = "form-control col-md-8 float-right" } })
                        @Html.ValidationMessageFor(model => model.address2, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.country_id, "Author Country", htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.DropDownListFor(model => model.country_id, (SelectList)ViewBag.CountryList, "Author Country", htmlAttributes: new { @class = "select2_demo_1 form-control col-md-8 float-right", required = "required" })
                        @Html.ValidationMessageFor(model => model.country_id, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <br />


                <div class="form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.city, "City", htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control col-md-8 float-right" } })
                        @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.state, "State", htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.state, new { htmlAttributes = new { @class = "form-control col-md-8 float-right" } })
                        @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.zip, "ZIP", htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.zip, new { htmlAttributes = new { @class = "form-control col-md-8 float-right" } })
                        @Html.ValidationMessageFor(model => model.zip, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.image,"Auther Image", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            <input type="file" name="img" />
                            @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="form-group" style="margin-top: 12%;">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.image, "Author Image", htmlAttributes: new { @class = "control-label col-md-4" })
                        <input type="file" name="img" />
                        @if (Model != null && !string.IsNullOrEmpty(Model.image))
                                            {
                                            <br />
                                            <img src="@url2@Model.image" class="img-thumbnail img-rounded" style="width: 34% !important;" />
                                            }
                                            else
                                            {
                                            <img style="width: 34% !important;" src="@(String.IsNullOrEmpty(Model.image)? "/Content/assets_cp/images/uploadImage.png":url2+Model.image)" />
                                            }
                        @Html.ValidationMessageFor(model => Model.image, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group" style="margin-bottom: 7%;margin-top: 11%;">
                    <div class="col-md-offset-2 col-md-12">
                        <input type="submit" value="Save" class="btn btn-primary" style="color:#fff !important;" />
                        @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-defult", style = "background: #ccc;" })
                    </div>
                </div>
            </div>
        </div>
   

    }


        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
