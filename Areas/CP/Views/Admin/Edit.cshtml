@model dorranceCP.Models.admin


@{
    ViewBag.Title = "Edit Admin";
    string url2 = "http://portal.dorrancepublishing.com/Content/Images/Original/";
    var AllLink = (List<dorranceCP.Models.Links>)ViewBag.LinkList;
    var db = ViewBag.db as dorranceCP.Models.NS_DorranceEntities;
    var Links = db.Links.Where(x => x.Show == true).ToList();
}

<style>
     input {
            height: 38px !important;
        }
     .btn-primary{
         color: #fff !important;
     }
     .btn-defult{
         background: #ccc !important;
     }
      .form-group {
            margin-bottom: -1rem !important;
        }
</style>

<div class="pageHeader col-md-8" style="width:100%;margin-top: 9%;">
    <div class="row" style="margin-left: 1%;">
        <div class="pageHeader" style="width:100%;">
            <h4><a href="/CP/Home/dashboard">Home</a> / <a href="/CP/Admin/">Admins</a> / Edit Admin</h4>


            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.ID)
                @Html.Hidden("oldEmail", Model.Email)
                @Html.Hidden("AspNetUserId", Model.AspNetUserId)

                <div class="form-horizontal col-md-8" style="margin-top:4%;float: left;">


                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row">
                        <div class="col-md-12">
                            <div class="tabbable-line">

                                <div class="tab-content">

                                    <div class="tab-pane active">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Name, "Name", htmlAttributes: new { @class = "control-label col-md-3" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                        <div class="form-group">
                                                @Html.LabelFor(model => model.Email, "Email", htmlAttributes: new { @class = "control-label col-md-3" })
                                                <div class="col-md-10">
                                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", readOnly="true", required = "required", title = "Invalid Email Address" } })
                                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Password, "New Password", htmlAttributes: new { @class = "control-label col-md-3" })
                                                <div class="col-md-10">
                                                    @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Mobile, "Mobile", htmlAttributes: new { @class = "control-label col-md-3" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control", pattern = "[0-9]{10,13}", title = "Mobile Number contains 13 number at most " } })
                                                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Address, "Address", htmlAttributes: new { @class = "control-label col-md-3" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                      

                                       
                                    </div>



                                    @*<div class="form-group">
                                            @Html.LabelFor(model => model.image,"Auther Image", htmlAttributes: new { @class = "control-label col-md-3" })
                                            <div class="col-md-8">
                                                <input type="file" name="img" />
                                                @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
                                            </div>
                                        </div>*@

                                    


                                    <div class="form-group" style="margin-bottom: 21%;margin-top: 1%;">
                                        <div class="col-md-offset-2 col-md-10">
                                            <input type="submit" value="Save" class="btn btn-primary" style="color:#fff !important;"/>
                                            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-defult",style= "background: #ccc;" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

                <div class="col-md-3" style="float:right;">
                    <p>Permissions</p>
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="ibox float-e-margins">
                                <div class="ibox-content">
                                    <div class="form-horizontal">

                                        <div class="form-group">

                                            <ul class="list-unstyled permission">
                                                @{
                                                    var links = db.Links.Where(x => x.ParentID == 0 && x.Show == true).ToList();
                                                    foreach (var link in links)
                                                    {
                                                        var haveAdminThisLink =
                                                            Links.Count(x => x.ID == link.ID) > 0;
                                                        <li>
                                                            <label>
                                                                <input name="linkId" @(haveAdminThisLink ? "checked" : "") type="checkbox" value="@link.ID" />
                                                                <b>@link.TitleEn</b>
                                                            </label>
                                                            <ul class="list-unstyled">
                                                                @{
                                                                    var sublinks = db.Links.Where(x => x.ParentID == link.ID && x.Show == true).ToList();
                                                                    foreach (var sublink in sublinks)
                                                                    {

                                                                        var haveAdminThisSubLink =
                                                                            Links.Count(x => x.ID == sublink.ID) > 0;
                                                                        <li>
                                                                            <label>
                                                                                <input name="linkId" @(haveAdminThisSubLink ? "checked" : "") type="checkbox" value="@sublink.ID" />
                                                                                @sublink.TitleEn
                                                                            </label>
                                                                        </li>
                                                                    }
                                                                }
                                                            </ul>
                                                        </li>
                                                                    }
                                                }
                                            </ul>


                                            @*<ul class="list-unstyled permission">

                                                    <li>
                                                        <label>
                                                            <input type="checkbox" value="" onchange="Active(this)" />
                                                            <b> @Resources.Labels.UserPermission</b>
                                                        </label>
                                                        <ul class="list-unstyled">



                                                            @{
                                                                var links = AllLink.Where(x => x.ParentID == 0).OrderBy(o => o.OrderdId).ToList();
                                                                foreach (var link in links)
                                                                {
                                                                    var haveAdminThisLink = Model.Links.Where(x => x.ID == link.ID).Count() > 0;
                                                                    <li>
                                                                        <label>
                                                                            <input name="linkId" @(haveAdminThisLink ? "checked" : "") onchange="Active(this)" type="checkbox" value="@link.ID" />
                                                                            <b>@(lang == "ar" ? link.TitleAr : link.TitleEn )</b>
                                                                        </label>
                                                                        <ul class="list-unstyled">
                                                                            @{
                                                                                var sublinks = AllLink.Where(x => x.ParentID == link.ID && x.Show == true).OrderBy(o => o.OrderdId).ToList();
                                                                                foreach (var sublink in sublinks)
                                                                                {
                                                                                    var haveAdminThisSubLink = Model.Links.Where(x => x.ID == sublink.ID).Count() > 0;
                                                                                    <li>
                                                                                        <label>
                                                                                            <input name="linkId" @(haveAdminThisSubLink ? "checked" : "") onchange="Active(this)" type="checkbox" value="@sublink.ID" />
                                                                                            @(lang == "ar" ? sublink.TitleAr : sublink.TitleEn )
                                                                                        </label>
                                                                                        <ul class="list-unstyled">
                                                                                            @{
                                                                                                var subsublinks = AllLink.Where(x => x.ParentID == sublink.ID && x.Show == true).OrderBy(o => o.OrderdId).ToList();
                                                                                                foreach (var subsublink in subsublinks)
                                                                                                {
                                                                                                    var haveAdminThisSubSubLink = Model.Links.Where(x => x.ID == subsublink.ID).Count() > 0;
                                                                                                    <li>
                                                                                                        <label>
                                                                                                            <input name="linkId" @(haveAdminThisSubSubLink ? "checked" : "") onchange="Active(this)" type="checkbox" value="@subsublink.ID" />
                                                                                                            @(lang == "ar" ? subsublink.TitleAr : subsublink.TitleEn )
                                                                                                        </label>
                                                                                                    </li>
                                                                                                }
                                                                                            }
                                                                                        </ul>
                                                                                    </li>


                                                                                                }
                                                                            }
                                                                        </ul>
                                                                    </li>
                                                                                                }
                                                            }
                                                        </ul>

                                                    </li>
                                                </ul>*@
                                        </div>



                                        @*<br />
                                        <div class="form-group">
                                            <div class="col-sm-offset-2 col-lg-10">
                                                <input type="submit" value="Save" class="btn btn-primary" />
                                            </div>
                                        </div>*@
                                    </div>


                                </div>
                            </div>
                        </div>

                    </div>

                </div>
                                                                    }


        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
